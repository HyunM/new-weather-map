{"version":3,"sources":["apiKeys.js","components/Daycard.jsx","components/DegreeToggle.jsx","components/WeekContainer.jsx","App.jsx","index.js"],"names":["module","exports","moment","require","Daycard","reading","degreeType","newDate","Date","weekday","dt","setTime","fahrenheit","Math","round","main","temp","celsius","imgURL","weather","id","className","align","format","description","DegreeToggle","updateForecastDegree","Fragment","type","name","value","checked","onChange","htmlFor","WeekContainer","state","fullData","dailyData","event","setState","target","console","log","componentDidMount","weatherURL","apiConfig","owmKey","fetch","then","res","json","data","list","filter","dt_txt","includes","formatDayCards","key","map","this","bind","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"kJAAAA,EAAOC,QAAU,CACb,OAAU,mCACV,UAAa,UACb,UAAa,Y,qLCAbC,G,UAASC,EAAQ,KA0BNC,EAxBC,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAEnBC,EAAU,IAAIC,KACZC,EAAuB,IAAbJ,EAAQK,GACxBH,EAAQI,QAAQF,GAEhB,IAAMG,EAAaC,KAAKC,MAAMT,EAAQU,KAAKC,MACrCC,EAAUJ,KAAKC,MAA0B,GAAnBF,EAAa,IAAQ,GAE3CM,EAAM,kBAAcb,EAAQc,QAAQ,GAAGC,GAAjC,WAEZ,OAAQ,yBAAKC,UAAU,WAAWC,MAAM,UAC5B,yBAAKD,UAAU,QACX,wBAAIA,UAAU,cAAcnB,EAAOK,GAASgB,OAAO,SACnD,uBAAGF,UAAU,cAAcnB,EAAOK,GAASgB,OAAO,oBAClD,uBAAGF,UAAWH,IACd,4BAAoB,YAAfZ,EAA2BW,EAAU,QAAOL,EAAa,SAC9D,yBAAKS,UAAU,aACX,uBAAGA,UAAU,aAAahB,EAAQc,QAAQ,GAAGK,iBCUtDC,EA7BM,SAAC,GAAwC,IAAvCnB,EAAsC,EAAtCA,WAAYoB,EAA0B,EAA1BA,qBAC/B,OACI,kBAAC,IAAMC,SAAP,KACI,yBAAKN,UAAU,gCACX,2BACIA,UAAU,mBACVO,KAAK,QACLC,KAAK,cACLT,GAAG,UACHU,MAAM,UACNC,QAAwB,YAAfzB,EACT0B,SAAUN,IACd,2BAAOL,UAAU,mBAAmBY,QAAQ,WAA5C,YAEJ,yBAAKZ,UAAU,gCACX,2BACIA,UAAU,mBACVO,KAAK,QACLC,KAAK,cACLT,GAAG,aACHU,MAAM,aACNC,QAAwB,eAAfzB,EACT0B,SAAUN,IACd,2BAAOL,UAAU,mBAAmBY,QAAQ,cAA5C,iBCwBDC,E,4MA7CXC,MAAQ,CACJC,SAAU,GACVC,UAAW,GACX/B,WAAY,c,EAGhBoB,qBAAuB,SAAAY,GACnB,EAAKC,SAAS,CACVjC,WAAYgC,EAAME,OAAOV,QAC1B,kBAAMW,QAAQC,IAAI,EAAKP,W,EAG9BQ,kBAAoB,WAChB,IAAMC,EAAU,2FAAuFC,IAAUC,QAEjHC,MAAMH,GACDI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAMd,EAAYc,EAAKC,KAAKC,QAAO,SAAUhD,GAAW,OAAOA,EAAQiD,OAAOC,SAAS,eACvF,EAAKhB,SAAS,CACVH,SAAUe,EAAKC,KACff,UAAWA,IACZ,kBAAMI,QAAQC,IAAI,EAAKP,c,EAItCqB,eAAiB,WACb,IAAIC,EAAM,EACV,OAAO,EAAKtB,MAAME,UAAUqB,KAAI,SAACrD,EAASC,GAAV,OAAyB,kBAAC,EAAD,CAASD,QAASA,EAASC,WAAY,EAAK6B,MAAM7B,WAAYmD,IAAKA,U,uDAI5H,OACI,yBAAKpC,UAAU,YAAYC,MAAM,UAC7B,wBAAID,UAAU,kCAAd,mBACA,wBAAIA,UAAU,wBAAd,iBACA,kBAAC,EAAD,CAAcf,WAAYqD,KAAKxB,MAAM7B,WAAYoB,qBAAsBiC,KAAKjC,qBAAqBkC,KAAKD,QACtG,yBAAKtC,UAAU,8BACVsC,KAAKH,uB,GAvCEK,IAAMC,WCUnBC,E,uKATP,OACI,yBAAK1C,UAAU,OACX,kBAAC,EAAD,W,GAJEwC,IAAMC,WCAxBE,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.5a3a848c.chunk.js","sourcesContent":["module.exports = {\r\n    \"owmKey\": \"aff0004c9dadd2ac3c0d42c4d9eebaaf\",\r\n    \"owmSecret\": \"secrete\",\r\n    \"owmUserID\": \"1226khm\"\r\n}","import React from 'react';\r\nimport \"./owfont-master/css/owfont-regular.css\"\r\nimport \"./owfont-master/css/owfont-regular.min.css\"\r\nvar moment = require('moment');\r\n\r\nconst Daycard = ({reading, degreeType}) => {\r\n\r\n    let newDate = new Date();\r\n    const weekday = reading.dt * 1000;\r\n    newDate.setTime(weekday);\r\n\r\n    const fahrenheit = Math.round(reading.main.temp)\r\n    const celsius = Math.round((fahrenheit - 32) * 5/9)\r\n\r\n    const imgURL = `owf owf-${reading.weather[0].id} owf-5x`;\r\n   \r\n    return (<div className=\"col-sm-2\" align=\"center\"> \r\n                <div className=\"card\">\r\n                    <h3 className=\"card-title\">{moment(newDate).format('dddd')}</h3>\r\n                    <p className=\"text-muted\">{moment(newDate).format('MMMM Do, h:mm a')}</p>\r\n                    <i className={imgURL}></i>\r\n                    <h2>{degreeType === \"celsius\" ? celsius + \"°C\" : fahrenheit + \"°F\"}</h2>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">{reading.weather[0].description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n}\r\n\r\nexport default Daycard;","import React from 'react'\r\nimport \"./owfont-master/css/owfont-regular.css\"\r\nimport \"./owfont-master/css/owfont-regular.min.css\"\r\n\r\nconst DegreeToggle = ({degreeType, updateForecastDegree}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"form-check form-check-inline\">\r\n                <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"degree-type\"\r\n                    id=\"celsius\"\r\n                    value=\"celsius\"\r\n                    checked={degreeType === \"celsius\"}\r\n                    onChange={updateForecastDegree}/>\r\n                <label className=\"form-check-label\" htmlFor=\"celsius\">Celsius</label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n                <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"degree-type\"\r\n                    id=\"fahrenheit\"\r\n                    value=\"fahrenheit\"\r\n                    checked={degreeType === \"fahrenheit\"}\r\n                    onChange={updateForecastDegree}/>\r\n                <label className=\"form-check-label\" htmlFor=\"fahrenheit\">Fahrenheit</label>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DegreeToggle;","import React from 'react';\r\nimport apiConfig from '../apiKeys'\r\nimport Daycard from './Daycard'\r\nimport DegreeToggle from './DegreeToggle'\r\n\r\nclass WeekContainer extends React.Component {\r\n    state = {\r\n        fullData: [],\r\n        dailyData: [],\r\n        degreeType: \"fahrenheit\",\r\n    }\r\n\r\n    updateForecastDegree = event => {\r\n        this.setState({\r\n            degreeType: event.target.value\r\n        }, () => console.log(this.state))\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const weatherURL = `https://api.openweathermap.org/data/2.5/forecast?id=5323810&units=imperial&APPID=${apiConfig.owmKey}`;\r\n\r\n        fetch(weatherURL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const dailyData = data.list.filter(function (reading) { return reading.dt_txt.includes(\"18:00:00\") });\r\n                this.setState({\r\n                    fullData: data.list,\r\n                    dailyData: dailyData\r\n                }, () => console.log(this.state))\r\n            })\r\n    }\r\n\r\n    formatDayCards = () => {\r\n        let key = 0;\r\n        return this.state.dailyData.map((reading, degreeType) => <Daycard reading={reading} degreeType={this.state.degreeType} key={key++}/>)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" align=\"center\">\r\n                <h1 className=\"display-1 jumbotron background\">5-Day Forecast.</h1>\r\n                <h5 className=\"display-5 text-muted\">Anaheim,CA US</h5>\r\n                <DegreeToggle degreeType={this.state.degreeType} updateForecastDegree={this.updateForecastDegree.bind(this)} />\r\n                <div className=\"row justify-content-center\">\r\n                    {this.formatDayCards()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekContainer;","import React from 'react';\nimport './App.css';\nimport WeekContainer from './components/WeekContainer';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <WeekContainer/>\n\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}